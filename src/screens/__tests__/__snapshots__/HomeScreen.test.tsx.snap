// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen changes selected role when clicking radio buttons 1`] = `
<View
  style={
    {
      "backgroundColor": "#fff",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      {
        "marginBottom": 16,
      }
    }
  >
    <Text
      style={
        {
          "color": "black",
          "fontSize": 20,
          "fontWeight": "500",
          "marginBottom": 10,
        }
      }
    >
      User Types
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Admin"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": false,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 0,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Admin
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#e6f7ff",
          "borderRadius": 10,
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Manager"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": true,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Manager
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#e6e6e6",
        "height": 1,
        "marginVertical": 20,
      }
    }
  />
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingBottom": 80,
      }
    }
    data={
      [
        {
          "id": "1",
          "name": "Alice",
          "role": "ADMIN",
        },
        {
          "id": "2",
          "name": "Bob",
          "role": "MANAGER",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[MockFunction]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[MockFunction]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    testID="user-list"
    viewabilityConfigCallbackPairs={[]}
  >
    <RCTRefreshControl />
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderRadius": 8,
              "flexDirection": "row",
              "marginVertical": 6,
              "opacity": 1,
              "padding": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "justifyContent": "center",
                },
                {
                  "backgroundColor": "#e6f7ff",
                  "height": 40,
                  "width": 40,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#0099e6",
                    "fontWeight": "bold",
                  },
                  {
                    "fontSize": 20,
                  },
                ]
              }
            >
              A
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "column",
                "marginLeft": 12,
              }
            }
          >
            <Text
              style={
                {
                  "color": "black",
                  "fontSize": 16,
                }
              }
            >
              Alice
            </Text>
            <Text
              style={
                {
                  "color": "#999",
                  "fontSize": 12,
                }
              }
            >
              Admin
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderRadius": 8,
              "flexDirection": "row",
              "marginVertical": 6,
              "opacity": 1,
              "padding": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "justifyContent": "center",
                },
                {
                  "backgroundColor": "#e6f7ff",
                  "height": 40,
                  "width": 40,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#0099e6",
                    "fontWeight": "bold",
                  },
                  {
                    "fontSize": 20,
                  },
                ]
              }
            >
              B
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "column",
                "marginLeft": 12,
              }
            }
          >
            <Text
              style={
                {
                  "color": "black",
                  "fontSize": 16,
                }
              }
            >
              Bob
            </Text>
            <Text
              style={
                {
                  "color": "#999",
                  "fontSize": 12,
                }
              }
            >
              Manager
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`HomeScreen renders list of users 1`] = `
<View
  style={
    {
      "backgroundColor": "#fff",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      {
        "marginBottom": 16,
      }
    }
  >
    <Text
      style={
        {
          "color": "black",
          "fontSize": 20,
          "fontWeight": "500",
          "marginBottom": 10,
        }
      }
    >
      User Types
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#e6f7ff",
          "borderRadius": 10,
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Admin"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": true,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Admin
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Manager"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": false,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 0,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Manager
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#e6e6e6",
        "height": 1,
        "marginVertical": 20,
      }
    }
  />
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingBottom": 80,
      }
    }
    data={
      [
        {
          "id": "1",
          "name": "Alice",
          "role": "ADMIN",
        },
        {
          "id": "2",
          "name": "Bob",
          "role": "MANAGER",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[MockFunction]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[MockFunction]}
        refreshing={false}
      />
    }
    refreshing={false}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    testID="user-list"
    viewabilityConfigCallbackPairs={[]}
  >
    <RCTRefreshControl />
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderRadius": 8,
              "flexDirection": "row",
              "marginVertical": 6,
              "opacity": 1,
              "padding": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "justifyContent": "center",
                },
                {
                  "backgroundColor": "#e6f7ff",
                  "height": 40,
                  "width": 40,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#0099e6",
                    "fontWeight": "bold",
                  },
                  {
                    "fontSize": 20,
                  },
                ]
              }
            >
              A
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "column",
                "marginLeft": 12,
              }
            }
          >
            <Text
              style={
                {
                  "color": "black",
                  "fontSize": 16,
                }
              }
            >
              Alice
            </Text>
            <Text
              style={
                {
                  "color": "#999",
                  "fontSize": 12,
                }
              }
            >
              Admin
            </Text>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "borderRadius": 8,
              "flexDirection": "row",
              "marginVertical": 6,
              "opacity": 1,
              "padding": 12,
            }
          }
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "borderRadius": 4,
                  "justifyContent": "center",
                },
                {
                  "backgroundColor": "#e6f7ff",
                  "height": 40,
                  "width": 40,
                },
              ]
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#0099e6",
                    "fontWeight": "bold",
                  },
                  {
                    "fontSize": 20,
                  },
                ]
              }
            >
              B
            </Text>
          </View>
          <View
            style={
              {
                "flexDirection": "column",
                "marginLeft": 12,
              }
            }
          >
            <Text
              style={
                {
                  "color": "black",
                  "fontSize": 16,
                }
              }
            >
              Bob
            </Text>
            <Text
              style={
                {
                  "color": "#999",
                  "fontSize": 12,
                }
              }
            >
              Manager
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`HomeScreen shows loading indicator while loading 1`] = `
<View
  style={
    {
      "backgroundColor": "#fff",
      "flex": 1,
      "padding": 16,
    }
  }
>
  <View
    style={
      {
        "marginBottom": 16,
      }
    }
  >
    <Text
      style={
        {
          "color": "black",
          "fontSize": 20,
          "fontWeight": "500",
          "marginBottom": 10,
        }
      }
    >
      User Types
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#e6f7ff",
          "borderRadius": 10,
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Admin"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": true,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Admin
      </Text>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
        }
      }
      testID="radio-Manager"
    >
      <View
        accessibilityLiveRegion="polite"
        accessibilityRole="radio"
        accessibilityState={
          {
            "busy": undefined,
            "checked": false,
            "disabled": false,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "borderRadius": 18,
              "padding": 6,
            },
          ]
        }
      >
        <View
          style={
            {
              "opacity": 0,
            }
          }
        >
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                },
                {
                  "color": "rgba(103, 80, 164, 1)",
                  "fontSize": 24,
                },
              ]
            }
          >
            □
          </Text>
        </View>
      </View>
      <Text
        style={
          {
            "color": "black",
            "fontSize": 16,
          }
        }
      >
        Manager
      </Text>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#e6e6e6",
        "height": 1,
        "marginVertical": 20,
      }
    }
  />
  <ActivityIndicator
    color="#0000ff"
    size="large"
    testID="loading-indicator"
  />
  <RCTScrollView
    contentContainerStyle={
      {
        "paddingBottom": 80,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[MockFunction]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[MockFunction]}
        refreshing={true}
      />
    }
    refreshing={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    testID="user-list"
    viewabilityConfigCallbackPairs={[]}
  >
    <RCTRefreshControl />
    <View />
  </RCTScrollView>
</View>
`;
